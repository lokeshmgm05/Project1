MongoDB:
show dbs
use vehicle
db.createCollection('cycle')
db.cars.insertMany([{carname:'bmw',perf:8},{carname:'skoda',perf:5}])
db.cycle.find()
db.cars.find({perf:{$gt:5}})
db.cars.find({$and:[{perf:{$gt:3}},{perf:{$lt:6}}]})
db.cars.find({$or:[{perf:7},{perf:8}]})
db.cars.find({perf:{$in:[1,2,3,4,5,6,7,8,9,10]}})
db.cars.update({perf:{$gt:5}},{$inc:{perf:+5}},{multi:true})
db.cars.update({perf:{$gt:5}},{$mul:{perf:5}},{multi:true})
db.cars.update({perf:{$gt:5}},{$set:{perf:5,carname:'benz'}},{multi:true})

  Redis:
set tik 50
get tik
append tik sachin
decrby tik 5
incrby tik 5
setex karpagam 5 pass
strlen tik
rename tik tok
keys t*k
keys t?k
keys *
rpush items " idly"
lpush items poori
lrange items 0 10
linsert items after idly dosai
lindex items 5
rpop items
zadd staffs 8 prof
zrevrange staffs 0 -1
zrevrangebyscore staffs 6 3
zscore staffs prof
zincrby staffs 4 prof
zrange staffs 0 10 withscores
zremrangebyscore staffs 2 8
zremrangebyrank staffs 2 8

cassandra:

create keyspace "company" with replication={'class':'SimpleStrategy','replication_factor':'1'};
use company;
create table employee(emp_id int primary key,name text);
insert into employee(emp_id int primary key,name text) values (1,'lokesh');
alter table employee add salary int;
select * from employee where emp_id=1 allow filtering;
update employee set salary=800 where emp_id=1;

neo4j:

create(lokesh:person{name:'lokesh', age:18}),(anadearmas:person{name:'ana de armas',age:20})
create(it:dept{name:'it',strength:23})
match(a:person),(b:dept) where a.name='lokesh' and b.name='it'
create(a)- [r:student_of]->(b) return a,b
match(n:student) return n;
